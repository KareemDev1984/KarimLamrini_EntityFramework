@model KarimLamrini_EntityFramework.ViewModels.SchoolViewModel

@{
    ViewBag.Title = "Add Book";
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

<h2>Books</h2>
@TempData["title"]


<div class="row">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="col-md-4">
            <h2>Add book</h2>
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.Book.Title, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Book.Title, new { htmlAttributes = new { @class = "form-control", id = "title", @Value = TempData["title"] } })
                    @Html.ValidationMessageFor(model => model.Book.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Book.Published, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Book.Published, new { htmlAttributes = new { @class = "form-control", id = "date" } })
                    @Html.ValidationMessageFor(model => model.Book.Published, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class=" form-group">
                @Html.LabelFor(model => model.Book.Authors, htmlAttributes: new { @class = "control-label" })
                <div Id="NewAuthorContainer">
                    @Html.ListBoxFor(model => model.idsOfSelectedAuthors, (SelectList)ViewBag.SelectListAuthors, new { @class = "form-control", style = "border-radius:4px", id = "bookAuthors" })
                </div>
            </div>

            <!--Add a new author button-->
            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#exampleModal"><span class="glyphicon glyphicon-plus"></span></button>
            @Html.Label("Add a new author", htmlAttributes: new { @class = "control-label" })

            <div class="form-group">
                <div class="pad-top">
                    <button type="submit" class="btn btn-success btn-lg c">
                        <span class="glyphicon glyphicon-save"></span> Save
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-warning btn-lg">
                        <span class="glyphicon glyphicon-remove"></span> Cancel
                    </a>
                </div>
            </div>
        </div>
    }

    <!--Tabel lijst met boeken en hun auteurs-->
    <div class="col-md-8">
        <h2>List of books</h2>
        <div style="overflow-y:scroll; height:400px">
            <table class="table">
                <tr>
                    <th>Book ID</th>
                    <th>Title</th>
                    <th>Published</th>
                    <th>Authors</th>

                    <th>&nbsp;</th>
                </tr>
                @foreach (var book in Model.Books)
                {
                    <tr>
                        <td>@book.BookId</td>
                        <td>@book.Title</td>
                        <td>@book.Published.ToShortDateString()</td>
                        <td>
                            <ul>
                                @foreach (var author in book.Authors)
                                {
                                    <li>@author.DisplayName</li>
                                }
                            </ul>
                        </td>
                        <td>
                            <div class="pull-right">
                                <a href="@Url.Action("Edit", new { id = book.BookId })" class="btn btn-warning btn-sm margin-right">
                                    <span class="glyphicon glyphicon-edit"></span><span class="hidden-xs"> Edit</span>
                                </a>
                                <a href="@Url.Action("Delete", new { id = book.BookId  })" class="btn btn-danger btn-sm">
                                    <span class="glyphicon glyphicon-trash"></span><span class="hidden-xs"> Delete</span>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
</div>


<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add author</h5>
            </div>
            <form id="myForm">
                <div class="modal-body">
                    <div class="form-group ">
                        @Html.LabelFor(model => model.Author.Name, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.Author.Name, new { htmlAttributes = new { @class = "form-control", id = "authorName" } })
                            @Html.ValidationMessageFor(model => model.Author.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Author.SurName, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Author.SurName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Author.SurName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div style="text-align:center;display:none" id="loaderDiv" class="pull-left">
                        <img src="~/Content/ZKZg.gif" width="70" />
                    </div>
                    <button type="reset" value="Submit" class="btn btn-success" id="btnSubmit"><span class="glyphicon glyphicon-save"></span>Save</button>
                    <button type="button" class="btn btn-warning" data-dismiss="modal"><span class="glyphicon glyphicon-remove"></span> Cancel</button>
                </div>
            </form>
        </div>

    </div>
</div>

<div style="display:none">
    <div id="authorBookList">
        <div class="form-group">
            @Html.LabelFor(model => model.Book.Authors, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.TextBoxFor(model => model.Author.Name, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
    </div>
</div>

<script>

    function Load() {
        var ddlAuthors = $("#bookAuthors");
        ddlAuthors.empty().append('<option selected="selected" value="0" disabled = "disabled">Loading.....</option>');
        $.ajax({
            type: "Post",
            url: "/school/LoadAuthors",
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                ddlAuthors.empty().append('<option selected="selected" value="0">Please select</option>');
                $.each(response, function () {
                    ddlAuthors.append($("<option></option>").val(this['Value']).html(this['Text']));
                });
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    };

    function myfunction() {
        $("#exampleModal").modal("hide");
    }

    $(document).ready(function () {
        $("#btnSubmit").click(function () {
            debugger
            $("#loaderDiv").show();

            var data = $("#myForm").serialize();
            $.ajax({

                type: "POST",
                url: "/School/AddAuthorInBookView",
                data: data,
                success: function (response) {
                    alert("Succesful");
                    myfunction();
                    $("#loaderDiv").hide();
                    Load();
                }
            });
        });
    });

    //function setValue() {
    //    var myVal = jQuery("#ddlAuthors option:selected").val();
    //    var opt = document.createElement("option");

    //    opt.text = myVal;
    //    opt.value = myVal;

    //    document.getElementById("bookAuthors").options.add(opt);
    //}


</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

